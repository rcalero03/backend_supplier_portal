// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryLayer;

#nullable disable

namespace RepositoryLayer.Migrations
{
    [DbContext(typeof(SupplierAPIDbContext))]
    partial class SupplierAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DomainLayer.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id")
                        .HasName("PK_IdEstado");

                    b.ToTable("Estado", (string)null);
                });

            modelBuilder.Entity("DomainLayer.Models.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int")
                        .HasColumnName("CreadoPor");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Descripcion");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCreacion");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaModificacion");

                    b.Property<int>("ModificadoPor")
                        .HasColumnType("int")
                        .HasColumnName("ModificadoPor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id")
                        .HasName("PK_IdTipoDocumento");

                    b.HasIndex("EstadoId");

                    b.ToTable("Tipo_Documento", (string)null);
                });

            modelBuilder.Entity("DomainLayer.Models.TipoDocumento", b =>
                {
                    b.HasOne("DomainLayer.Models.Estado", "Estado")
                        .WithMany("TipoDocumentos")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TipoDocumento_Estado");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("DomainLayer.Models.Estado", b =>
                {
                    b.Navigation("TipoDocumentos");
                });
#pragma warning restore 612, 618
        }
    }
}
